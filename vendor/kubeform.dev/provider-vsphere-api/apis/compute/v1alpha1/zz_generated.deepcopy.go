//go:build !ignore_autogenerated
// +build !ignore_autogenerated

/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by deepcopy-gen. DO NOT EDIT.

package v1alpha1

import (
	v1 "k8s.io/api/core/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
	apiv1 "kmodules.xyz/client-go/api/v1"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Cluster) DeepCopyInto(out *Cluster) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Cluster.
func (in *Cluster) DeepCopy() *Cluster {
	if in == nil {
		return nil
	}
	out := new(Cluster)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Cluster) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterHostGroup) DeepCopyInto(out *ClusterHostGroup) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterHostGroup.
func (in *ClusterHostGroup) DeepCopy() *ClusterHostGroup {
	if in == nil {
		return nil
	}
	out := new(ClusterHostGroup)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ClusterHostGroup) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterHostGroupList) DeepCopyInto(out *ClusterHostGroupList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ClusterHostGroup, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterHostGroupList.
func (in *ClusterHostGroupList) DeepCopy() *ClusterHostGroupList {
	if in == nil {
		return nil
	}
	out := new(ClusterHostGroupList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ClusterHostGroupList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterHostGroupSpec) DeepCopyInto(out *ClusterHostGroupSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(ClusterHostGroupSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	if in.BackendRef != nil {
		in, out := &in.BackendRef, &out.BackendRef
		*out = new(v1.LocalObjectReference)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterHostGroupSpec.
func (in *ClusterHostGroupSpec) DeepCopy() *ClusterHostGroupSpec {
	if in == nil {
		return nil
	}
	out := new(ClusterHostGroupSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterHostGroupSpecResource) DeepCopyInto(out *ClusterHostGroupSpecResource) {
	*out = *in
	if in.ComputeClusterID != nil {
		in, out := &in.ComputeClusterID, &out.ComputeClusterID
		*out = new(string)
		**out = **in
	}
	if in.HostSystemIDS != nil {
		in, out := &in.HostSystemIDS, &out.HostSystemIDS
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterHostGroupSpecResource.
func (in *ClusterHostGroupSpecResource) DeepCopy() *ClusterHostGroupSpecResource {
	if in == nil {
		return nil
	}
	out := new(ClusterHostGroupSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterHostGroupStatus) DeepCopyInto(out *ClusterHostGroupStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]apiv1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterHostGroupStatus.
func (in *ClusterHostGroupStatus) DeepCopy() *ClusterHostGroupStatus {
	if in == nil {
		return nil
	}
	out := new(ClusterHostGroupStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterList) DeepCopyInto(out *ClusterList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Cluster, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterList.
func (in *ClusterList) DeepCopy() *ClusterList {
	if in == nil {
		return nil
	}
	out := new(ClusterList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ClusterList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterSpec) DeepCopyInto(out *ClusterSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(ClusterSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	if in.BackendRef != nil {
		in, out := &in.BackendRef, &out.BackendRef
		*out = new(v1.LocalObjectReference)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterSpec.
func (in *ClusterSpec) DeepCopy() *ClusterSpec {
	if in == nil {
		return nil
	}
	out := new(ClusterSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterSpecResource) DeepCopyInto(out *ClusterSpecResource) {
	*out = *in
	if in.CustomAttributes != nil {
		in, out := &in.CustomAttributes, &out.CustomAttributes
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.DatacenterID != nil {
		in, out := &in.DatacenterID, &out.DatacenterID
		*out = new(string)
		**out = **in
	}
	if in.DpmAutomationLevel != nil {
		in, out := &in.DpmAutomationLevel, &out.DpmAutomationLevel
		*out = new(string)
		**out = **in
	}
	if in.DpmEnabled != nil {
		in, out := &in.DpmEnabled, &out.DpmEnabled
		*out = new(bool)
		**out = **in
	}
	if in.DpmThreshold != nil {
		in, out := &in.DpmThreshold, &out.DpmThreshold
		*out = new(int64)
		**out = **in
	}
	if in.DrsAdvancedOptions != nil {
		in, out := &in.DrsAdvancedOptions, &out.DrsAdvancedOptions
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.DrsAutomationLevel != nil {
		in, out := &in.DrsAutomationLevel, &out.DrsAutomationLevel
		*out = new(string)
		**out = **in
	}
	if in.DrsEnablePredictiveDrs != nil {
		in, out := &in.DrsEnablePredictiveDrs, &out.DrsEnablePredictiveDrs
		*out = new(bool)
		**out = **in
	}
	if in.DrsEnableVmOverrides != nil {
		in, out := &in.DrsEnableVmOverrides, &out.DrsEnableVmOverrides
		*out = new(bool)
		**out = **in
	}
	if in.DrsEnabled != nil {
		in, out := &in.DrsEnabled, &out.DrsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.DrsMigrationThreshold != nil {
		in, out := &in.DrsMigrationThreshold, &out.DrsMigrationThreshold
		*out = new(int64)
		**out = **in
	}
	if in.Folder != nil {
		in, out := &in.Folder, &out.Folder
		*out = new(string)
		**out = **in
	}
	if in.ForceEvacuateOnDestroy != nil {
		in, out := &in.ForceEvacuateOnDestroy, &out.ForceEvacuateOnDestroy
		*out = new(bool)
		**out = **in
	}
	if in.HaAdmissionControlFailoverHostSystemIDS != nil {
		in, out := &in.HaAdmissionControlFailoverHostSystemIDS, &out.HaAdmissionControlFailoverHostSystemIDS
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.HaAdmissionControlHostFailureTolerance != nil {
		in, out := &in.HaAdmissionControlHostFailureTolerance, &out.HaAdmissionControlHostFailureTolerance
		*out = new(int64)
		**out = **in
	}
	if in.HaAdmissionControlPerformanceTolerance != nil {
		in, out := &in.HaAdmissionControlPerformanceTolerance, &out.HaAdmissionControlPerformanceTolerance
		*out = new(int64)
		**out = **in
	}
	if in.HaAdmissionControlPolicy != nil {
		in, out := &in.HaAdmissionControlPolicy, &out.HaAdmissionControlPolicy
		*out = new(string)
		**out = **in
	}
	if in.HaAdmissionControlResourcePercentageAutoCompute != nil {
		in, out := &in.HaAdmissionControlResourcePercentageAutoCompute, &out.HaAdmissionControlResourcePercentageAutoCompute
		*out = new(bool)
		**out = **in
	}
	if in.HaAdmissionControlResourcePercentageCPU != nil {
		in, out := &in.HaAdmissionControlResourcePercentageCPU, &out.HaAdmissionControlResourcePercentageCPU
		*out = new(int64)
		**out = **in
	}
	if in.HaAdmissionControlResourcePercentageMemory != nil {
		in, out := &in.HaAdmissionControlResourcePercentageMemory, &out.HaAdmissionControlResourcePercentageMemory
		*out = new(int64)
		**out = **in
	}
	if in.HaAdmissionControlSlotPolicyExplicitCPU != nil {
		in, out := &in.HaAdmissionControlSlotPolicyExplicitCPU, &out.HaAdmissionControlSlotPolicyExplicitCPU
		*out = new(int64)
		**out = **in
	}
	if in.HaAdmissionControlSlotPolicyExplicitMemory != nil {
		in, out := &in.HaAdmissionControlSlotPolicyExplicitMemory, &out.HaAdmissionControlSlotPolicyExplicitMemory
		*out = new(int64)
		**out = **in
	}
	if in.HaAdmissionControlSlotPolicyUseExplicitSize != nil {
		in, out := &in.HaAdmissionControlSlotPolicyUseExplicitSize, &out.HaAdmissionControlSlotPolicyUseExplicitSize
		*out = new(bool)
		**out = **in
	}
	if in.HaAdvancedOptions != nil {
		in, out := &in.HaAdvancedOptions, &out.HaAdvancedOptions
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.HaDatastoreApdRecoveryAction != nil {
		in, out := &in.HaDatastoreApdRecoveryAction, &out.HaDatastoreApdRecoveryAction
		*out = new(string)
		**out = **in
	}
	if in.HaDatastoreApdResponse != nil {
		in, out := &in.HaDatastoreApdResponse, &out.HaDatastoreApdResponse
		*out = new(string)
		**out = **in
	}
	if in.HaDatastoreApdResponseDelay != nil {
		in, out := &in.HaDatastoreApdResponseDelay, &out.HaDatastoreApdResponseDelay
		*out = new(int64)
		**out = **in
	}
	if in.HaDatastorePdlResponse != nil {
		in, out := &in.HaDatastorePdlResponse, &out.HaDatastorePdlResponse
		*out = new(string)
		**out = **in
	}
	if in.HaEnabled != nil {
		in, out := &in.HaEnabled, &out.HaEnabled
		*out = new(bool)
		**out = **in
	}
	if in.HaHeartbeatDatastoreIDS != nil {
		in, out := &in.HaHeartbeatDatastoreIDS, &out.HaHeartbeatDatastoreIDS
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.HaHeartbeatDatastorePolicy != nil {
		in, out := &in.HaHeartbeatDatastorePolicy, &out.HaHeartbeatDatastorePolicy
		*out = new(string)
		**out = **in
	}
	if in.HaHostIsolationResponse != nil {
		in, out := &in.HaHostIsolationResponse, &out.HaHostIsolationResponse
		*out = new(string)
		**out = **in
	}
	if in.HaHostMonitoring != nil {
		in, out := &in.HaHostMonitoring, &out.HaHostMonitoring
		*out = new(string)
		**out = **in
	}
	if in.HaVmComponentProtection != nil {
		in, out := &in.HaVmComponentProtection, &out.HaVmComponentProtection
		*out = new(string)
		**out = **in
	}
	if in.HaVmDependencyRestartCondition != nil {
		in, out := &in.HaVmDependencyRestartCondition, &out.HaVmDependencyRestartCondition
		*out = new(string)
		**out = **in
	}
	if in.HaVmFailureInterval != nil {
		in, out := &in.HaVmFailureInterval, &out.HaVmFailureInterval
		*out = new(int64)
		**out = **in
	}
	if in.HaVmMaximumFailureWindow != nil {
		in, out := &in.HaVmMaximumFailureWindow, &out.HaVmMaximumFailureWindow
		*out = new(int64)
		**out = **in
	}
	if in.HaVmMaximumResets != nil {
		in, out := &in.HaVmMaximumResets, &out.HaVmMaximumResets
		*out = new(int64)
		**out = **in
	}
	if in.HaVmMinimumUptime != nil {
		in, out := &in.HaVmMinimumUptime, &out.HaVmMinimumUptime
		*out = new(int64)
		**out = **in
	}
	if in.HaVmMonitoring != nil {
		in, out := &in.HaVmMonitoring, &out.HaVmMonitoring
		*out = new(string)
		**out = **in
	}
	if in.HaVmRestartAdditionalDelay != nil {
		in, out := &in.HaVmRestartAdditionalDelay, &out.HaVmRestartAdditionalDelay
		*out = new(int64)
		**out = **in
	}
	if in.HaVmRestartPriority != nil {
		in, out := &in.HaVmRestartPriority, &out.HaVmRestartPriority
		*out = new(string)
		**out = **in
	}
	if in.HaVmRestartTimeout != nil {
		in, out := &in.HaVmRestartTimeout, &out.HaVmRestartTimeout
		*out = new(int64)
		**out = **in
	}
	if in.HostClusterExitTimeout != nil {
		in, out := &in.HostClusterExitTimeout, &out.HostClusterExitTimeout
		*out = new(int64)
		**out = **in
	}
	if in.HostManaged != nil {
		in, out := &in.HostManaged, &out.HostManaged
		*out = new(bool)
		**out = **in
	}
	if in.HostSystemIDS != nil {
		in, out := &in.HostSystemIDS, &out.HostSystemIDS
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ProactiveHaAutomationLevel != nil {
		in, out := &in.ProactiveHaAutomationLevel, &out.ProactiveHaAutomationLevel
		*out = new(string)
		**out = **in
	}
	if in.ProactiveHaEnabled != nil {
		in, out := &in.ProactiveHaEnabled, &out.ProactiveHaEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ProactiveHaModerateRemediation != nil {
		in, out := &in.ProactiveHaModerateRemediation, &out.ProactiveHaModerateRemediation
		*out = new(string)
		**out = **in
	}
	if in.ProactiveHaProviderIDS != nil {
		in, out := &in.ProactiveHaProviderIDS, &out.ProactiveHaProviderIDS
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.ProactiveHaSevereRemediation != nil {
		in, out := &in.ProactiveHaSevereRemediation, &out.ProactiveHaSevereRemediation
		*out = new(string)
		**out = **in
	}
	if in.ResourcePoolID != nil {
		in, out := &in.ResourcePoolID, &out.ResourcePoolID
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.VsanDiskGroup != nil {
		in, out := &in.VsanDiskGroup, &out.VsanDiskGroup
		*out = make([]ClusterSpecVsanDiskGroup, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VsanEnabled != nil {
		in, out := &in.VsanEnabled, &out.VsanEnabled
		*out = new(bool)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterSpecResource.
func (in *ClusterSpecResource) DeepCopy() *ClusterSpecResource {
	if in == nil {
		return nil
	}
	out := new(ClusterSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterSpecVsanDiskGroup) DeepCopyInto(out *ClusterSpecVsanDiskGroup) {
	*out = *in
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterSpecVsanDiskGroup.
func (in *ClusterSpecVsanDiskGroup) DeepCopy() *ClusterSpecVsanDiskGroup {
	if in == nil {
		return nil
	}
	out := new(ClusterSpecVsanDiskGroup)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterStatus) DeepCopyInto(out *ClusterStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]apiv1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterStatus.
func (in *ClusterStatus) DeepCopy() *ClusterStatus {
	if in == nil {
		return nil
	}
	out := new(ClusterStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterVmAffinityRule) DeepCopyInto(out *ClusterVmAffinityRule) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterVmAffinityRule.
func (in *ClusterVmAffinityRule) DeepCopy() *ClusterVmAffinityRule {
	if in == nil {
		return nil
	}
	out := new(ClusterVmAffinityRule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ClusterVmAffinityRule) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterVmAffinityRuleList) DeepCopyInto(out *ClusterVmAffinityRuleList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ClusterVmAffinityRule, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterVmAffinityRuleList.
func (in *ClusterVmAffinityRuleList) DeepCopy() *ClusterVmAffinityRuleList {
	if in == nil {
		return nil
	}
	out := new(ClusterVmAffinityRuleList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ClusterVmAffinityRuleList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterVmAffinityRuleSpec) DeepCopyInto(out *ClusterVmAffinityRuleSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(ClusterVmAffinityRuleSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	if in.BackendRef != nil {
		in, out := &in.BackendRef, &out.BackendRef
		*out = new(v1.LocalObjectReference)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterVmAffinityRuleSpec.
func (in *ClusterVmAffinityRuleSpec) DeepCopy() *ClusterVmAffinityRuleSpec {
	if in == nil {
		return nil
	}
	out := new(ClusterVmAffinityRuleSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterVmAffinityRuleSpecResource) DeepCopyInto(out *ClusterVmAffinityRuleSpecResource) {
	*out = *in
	if in.ComputeClusterID != nil {
		in, out := &in.ComputeClusterID, &out.ComputeClusterID
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Mandatory != nil {
		in, out := &in.Mandatory, &out.Mandatory
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.VirtualMachineIDS != nil {
		in, out := &in.VirtualMachineIDS, &out.VirtualMachineIDS
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterVmAffinityRuleSpecResource.
func (in *ClusterVmAffinityRuleSpecResource) DeepCopy() *ClusterVmAffinityRuleSpecResource {
	if in == nil {
		return nil
	}
	out := new(ClusterVmAffinityRuleSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterVmAffinityRuleStatus) DeepCopyInto(out *ClusterVmAffinityRuleStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]apiv1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterVmAffinityRuleStatus.
func (in *ClusterVmAffinityRuleStatus) DeepCopy() *ClusterVmAffinityRuleStatus {
	if in == nil {
		return nil
	}
	out := new(ClusterVmAffinityRuleStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterVmAntiAffinityRule) DeepCopyInto(out *ClusterVmAntiAffinityRule) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterVmAntiAffinityRule.
func (in *ClusterVmAntiAffinityRule) DeepCopy() *ClusterVmAntiAffinityRule {
	if in == nil {
		return nil
	}
	out := new(ClusterVmAntiAffinityRule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ClusterVmAntiAffinityRule) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterVmAntiAffinityRuleList) DeepCopyInto(out *ClusterVmAntiAffinityRuleList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ClusterVmAntiAffinityRule, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterVmAntiAffinityRuleList.
func (in *ClusterVmAntiAffinityRuleList) DeepCopy() *ClusterVmAntiAffinityRuleList {
	if in == nil {
		return nil
	}
	out := new(ClusterVmAntiAffinityRuleList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ClusterVmAntiAffinityRuleList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterVmAntiAffinityRuleSpec) DeepCopyInto(out *ClusterVmAntiAffinityRuleSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(ClusterVmAntiAffinityRuleSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	if in.BackendRef != nil {
		in, out := &in.BackendRef, &out.BackendRef
		*out = new(v1.LocalObjectReference)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterVmAntiAffinityRuleSpec.
func (in *ClusterVmAntiAffinityRuleSpec) DeepCopy() *ClusterVmAntiAffinityRuleSpec {
	if in == nil {
		return nil
	}
	out := new(ClusterVmAntiAffinityRuleSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterVmAntiAffinityRuleSpecResource) DeepCopyInto(out *ClusterVmAntiAffinityRuleSpecResource) {
	*out = *in
	if in.ComputeClusterID != nil {
		in, out := &in.ComputeClusterID, &out.ComputeClusterID
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Mandatory != nil {
		in, out := &in.Mandatory, &out.Mandatory
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.VirtualMachineIDS != nil {
		in, out := &in.VirtualMachineIDS, &out.VirtualMachineIDS
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterVmAntiAffinityRuleSpecResource.
func (in *ClusterVmAntiAffinityRuleSpecResource) DeepCopy() *ClusterVmAntiAffinityRuleSpecResource {
	if in == nil {
		return nil
	}
	out := new(ClusterVmAntiAffinityRuleSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterVmAntiAffinityRuleStatus) DeepCopyInto(out *ClusterVmAntiAffinityRuleStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]apiv1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterVmAntiAffinityRuleStatus.
func (in *ClusterVmAntiAffinityRuleStatus) DeepCopy() *ClusterVmAntiAffinityRuleStatus {
	if in == nil {
		return nil
	}
	out := new(ClusterVmAntiAffinityRuleStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterVmDependencyRule) DeepCopyInto(out *ClusterVmDependencyRule) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterVmDependencyRule.
func (in *ClusterVmDependencyRule) DeepCopy() *ClusterVmDependencyRule {
	if in == nil {
		return nil
	}
	out := new(ClusterVmDependencyRule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ClusterVmDependencyRule) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterVmDependencyRuleList) DeepCopyInto(out *ClusterVmDependencyRuleList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ClusterVmDependencyRule, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterVmDependencyRuleList.
func (in *ClusterVmDependencyRuleList) DeepCopy() *ClusterVmDependencyRuleList {
	if in == nil {
		return nil
	}
	out := new(ClusterVmDependencyRuleList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ClusterVmDependencyRuleList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterVmDependencyRuleSpec) DeepCopyInto(out *ClusterVmDependencyRuleSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(ClusterVmDependencyRuleSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	if in.BackendRef != nil {
		in, out := &in.BackendRef, &out.BackendRef
		*out = new(v1.LocalObjectReference)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterVmDependencyRuleSpec.
func (in *ClusterVmDependencyRuleSpec) DeepCopy() *ClusterVmDependencyRuleSpec {
	if in == nil {
		return nil
	}
	out := new(ClusterVmDependencyRuleSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterVmDependencyRuleSpecResource) DeepCopyInto(out *ClusterVmDependencyRuleSpecResource) {
	*out = *in
	if in.ComputeClusterID != nil {
		in, out := &in.ComputeClusterID, &out.ComputeClusterID
		*out = new(string)
		**out = **in
	}
	if in.DependencyVmGroupName != nil {
		in, out := &in.DependencyVmGroupName, &out.DependencyVmGroupName
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Mandatory != nil {
		in, out := &in.Mandatory, &out.Mandatory
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.VmGroupName != nil {
		in, out := &in.VmGroupName, &out.VmGroupName
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterVmDependencyRuleSpecResource.
func (in *ClusterVmDependencyRuleSpecResource) DeepCopy() *ClusterVmDependencyRuleSpecResource {
	if in == nil {
		return nil
	}
	out := new(ClusterVmDependencyRuleSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterVmDependencyRuleStatus) DeepCopyInto(out *ClusterVmDependencyRuleStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]apiv1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterVmDependencyRuleStatus.
func (in *ClusterVmDependencyRuleStatus) DeepCopy() *ClusterVmDependencyRuleStatus {
	if in == nil {
		return nil
	}
	out := new(ClusterVmDependencyRuleStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterVmGroup) DeepCopyInto(out *ClusterVmGroup) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterVmGroup.
func (in *ClusterVmGroup) DeepCopy() *ClusterVmGroup {
	if in == nil {
		return nil
	}
	out := new(ClusterVmGroup)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ClusterVmGroup) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterVmGroupList) DeepCopyInto(out *ClusterVmGroupList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ClusterVmGroup, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterVmGroupList.
func (in *ClusterVmGroupList) DeepCopy() *ClusterVmGroupList {
	if in == nil {
		return nil
	}
	out := new(ClusterVmGroupList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ClusterVmGroupList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterVmGroupSpec) DeepCopyInto(out *ClusterVmGroupSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(ClusterVmGroupSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	if in.BackendRef != nil {
		in, out := &in.BackendRef, &out.BackendRef
		*out = new(v1.LocalObjectReference)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterVmGroupSpec.
func (in *ClusterVmGroupSpec) DeepCopy() *ClusterVmGroupSpec {
	if in == nil {
		return nil
	}
	out := new(ClusterVmGroupSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterVmGroupSpecResource) DeepCopyInto(out *ClusterVmGroupSpecResource) {
	*out = *in
	if in.ComputeClusterID != nil {
		in, out := &in.ComputeClusterID, &out.ComputeClusterID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.VirtualMachineIDS != nil {
		in, out := &in.VirtualMachineIDS, &out.VirtualMachineIDS
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterVmGroupSpecResource.
func (in *ClusterVmGroupSpecResource) DeepCopy() *ClusterVmGroupSpecResource {
	if in == nil {
		return nil
	}
	out := new(ClusterVmGroupSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterVmGroupStatus) DeepCopyInto(out *ClusterVmGroupStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]apiv1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterVmGroupStatus.
func (in *ClusterVmGroupStatus) DeepCopy() *ClusterVmGroupStatus {
	if in == nil {
		return nil
	}
	out := new(ClusterVmGroupStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterVmHostRule) DeepCopyInto(out *ClusterVmHostRule) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterVmHostRule.
func (in *ClusterVmHostRule) DeepCopy() *ClusterVmHostRule {
	if in == nil {
		return nil
	}
	out := new(ClusterVmHostRule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ClusterVmHostRule) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterVmHostRuleList) DeepCopyInto(out *ClusterVmHostRuleList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ClusterVmHostRule, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterVmHostRuleList.
func (in *ClusterVmHostRuleList) DeepCopy() *ClusterVmHostRuleList {
	if in == nil {
		return nil
	}
	out := new(ClusterVmHostRuleList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ClusterVmHostRuleList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterVmHostRuleSpec) DeepCopyInto(out *ClusterVmHostRuleSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(ClusterVmHostRuleSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	if in.BackendRef != nil {
		in, out := &in.BackendRef, &out.BackendRef
		*out = new(v1.LocalObjectReference)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterVmHostRuleSpec.
func (in *ClusterVmHostRuleSpec) DeepCopy() *ClusterVmHostRuleSpec {
	if in == nil {
		return nil
	}
	out := new(ClusterVmHostRuleSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterVmHostRuleSpecResource) DeepCopyInto(out *ClusterVmHostRuleSpecResource) {
	*out = *in
	if in.AffinityHostGroupName != nil {
		in, out := &in.AffinityHostGroupName, &out.AffinityHostGroupName
		*out = new(string)
		**out = **in
	}
	if in.AntiAffinityHostGroupName != nil {
		in, out := &in.AntiAffinityHostGroupName, &out.AntiAffinityHostGroupName
		*out = new(string)
		**out = **in
	}
	if in.ComputeClusterID != nil {
		in, out := &in.ComputeClusterID, &out.ComputeClusterID
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Mandatory != nil {
		in, out := &in.Mandatory, &out.Mandatory
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.VmGroupName != nil {
		in, out := &in.VmGroupName, &out.VmGroupName
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterVmHostRuleSpecResource.
func (in *ClusterVmHostRuleSpecResource) DeepCopy() *ClusterVmHostRuleSpecResource {
	if in == nil {
		return nil
	}
	out := new(ClusterVmHostRuleSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterVmHostRuleStatus) DeepCopyInto(out *ClusterVmHostRuleStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]apiv1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterVmHostRuleStatus.
func (in *ClusterVmHostRuleStatus) DeepCopy() *ClusterVmHostRuleStatus {
	if in == nil {
		return nil
	}
	out := new(ClusterVmHostRuleStatus)
	in.DeepCopyInto(out)
	return out
}
