/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
	"sigs.k8s.io/cli-utils/pkg/kstatus/status"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type ClusterVmHostRule struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              ClusterVmHostRuleSpec   `json:"spec,omitempty"`
	Status            ClusterVmHostRuleStatus `json:"status,omitempty"`
}

type ClusterVmHostRuleSpec struct {
	State *ClusterVmHostRuleSpecResource `json:"state,omitempty" tf:"-"`

	Resource ClusterVmHostRuleSpecResource `json:"resource" tf:"resource"`

	UpdatePolicy base.UpdatePolicy `json:"updatePolicy,omitempty" tf:"-"`

	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	BackendRef *core.LocalObjectReference `json:"backendRef,omitempty" tf:"-"`
}

type ClusterVmHostRuleSpecResource struct {
	ID string `json:"id,omitempty" tf:"id,omitempty"`

	// When this field is used, virtual machines defined in vm_group_name will be run on the hosts defined in this host group.
	// +optional
	AffinityHostGroupName *string `json:"affinityHostGroupName,omitempty" tf:"affinity_host_group_name"`
	// When this field is used, virtual machines defined in vm_group_name will not be run on the hosts defined in this host group.
	// +optional
	AntiAffinityHostGroupName *string `json:"antiAffinityHostGroupName,omitempty" tf:"anti_affinity_host_group_name"`
	// The managed object ID of the cluster.
	ComputeClusterID *string `json:"computeClusterID" tf:"compute_cluster_id"`
	// Enable this rule in the cluster.
	// +optional
	Enabled *bool `json:"enabled,omitempty" tf:"enabled"`
	// When true, prevents any virtual machine operations that may violate this rule.
	// +optional
	Mandatory *bool `json:"mandatory,omitempty" tf:"mandatory"`
	// The unique name of the virtual machine group in the cluster.
	Name *string `json:"name" tf:"name"`
	// The name of the virtual machine group to use with this rule.
	VmGroupName *string `json:"vmGroupName" tf:"vm_group_name"`
}

type ClusterVmHostRuleStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase status.Status `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// ClusterVmHostRuleList is a list of ClusterVmHostRules
type ClusterVmHostRuleList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of ClusterVmHostRule CRD objects
	Items []ClusterVmHostRule `json:"items,omitempty"`
}
