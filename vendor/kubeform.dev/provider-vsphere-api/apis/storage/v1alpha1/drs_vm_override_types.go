/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
	"sigs.k8s.io/cli-utils/pkg/kstatus/status"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type DrsVmOverride struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              DrsVmOverrideSpec   `json:"spec,omitempty"`
	Status            DrsVmOverrideStatus `json:"status,omitempty"`
}

type DrsVmOverrideSpec struct {
	State *DrsVmOverrideSpecResource `json:"state,omitempty" tf:"-"`

	Resource DrsVmOverrideSpecResource `json:"resource" tf:"resource"`

	UpdatePolicy base.UpdatePolicy `json:"updatePolicy,omitempty" tf:"-"`

	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`
}

type DrsVmOverrideSpecResource struct {
	ID string `json:"id,omitempty" tf:"id,omitempty"`

	// The managed object ID of the datastore cluster.
	DatastoreClusterID *string `json:"datastoreClusterID" tf:"datastore_cluster_id"`
	// Overrides any Storage DRS automation levels for this virtual machine.
	// +optional
	SdrsAutomationLevel *string `json:"sdrsAutomationLevel,omitempty" tf:"sdrs_automation_level"`
	// Overrides the default Storage DRS setting for this virtual machine.
	// +optional
	SdrsEnabled *string `json:"sdrsEnabled,omitempty" tf:"sdrs_enabled"`
	// Overrides the intra-VM affinity setting for this virtual machine.
	// +optional
	SdrsIntraVmAffinity *string `json:"sdrsIntraVmAffinity,omitempty" tf:"sdrs_intra_vm_affinity"`
	// The managed object ID of the virtual machine.
	VirtualMachineID *string `json:"virtualMachineID" tf:"virtual_machine_id"`
}

type DrsVmOverrideStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase status.Status `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// DrsVmOverrideList is a list of DrsVmOverrides
type DrsVmOverrideList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of DrsVmOverride CRD objects
	Items []DrsVmOverride `json:"items,omitempty"`
}
